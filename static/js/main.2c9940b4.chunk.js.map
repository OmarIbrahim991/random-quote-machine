{"version":3,"sources":["quotes.js","App.js","serviceWorker.js","index.js"],"names":["QUOTES","quote","author","Wrapper","props","getNewQuote","index","Math","floor","random","Quotes","length","state","num","setState","id","this","href","onClick","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mQAoDiBA,EApDF,CACX,CACIC,MAAO,2DACPC,OAAQ,eACT,CACCD,MAAO,yJACPC,OAAQ,gBACT,CACCD,MAAO,yFACPC,OAAQ,mBACT,CACCD,MAAO,kIACPC,OAAQ,qBACT,CACCD,MAAO,+OACPC,OAAQ,cACT,CACCD,MAAO,4EACPC,OAAQ,cACT,CACCD,MAAO,8JACPC,OAAQ,gBACT,CACCD,MAAO,mIACPC,OAAQ,eACT,CACCD,MAAO,mFACPC,OAAQ,cACT,CACCD,MAAO,0FACPC,OAAQ,gBACT,CACCD,MAAO,sPACPC,OAAQ,kBACT,CACCD,MAAO,mEACPC,OAAQ,iBACT,CACCD,MAAO,iDACPC,OAAQ,oBACT,CACCD,MAAO,+BACPC,OAAQ,iBACT,CACCD,MAAO,yFACPC,OAAQ,mBACT,CACCD,MAAO,iCACPC,OAAQ,qBC5CKC,G,kBACnB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAQRC,YAAc,WAEZ,IADA,IAAIC,EAAQC,KAAKC,MAAMD,KAAKE,SAASC,EAAOC,QACrCL,IAAU,EAAKM,MAAMC,KAC1BP,EAAQC,KAAKC,MAAMD,KAAKE,SAASC,EAAOC,QAE1C,EAAKG,SAAS,CAACb,MAAOS,EAAOJ,GAAOL,MAAOC,OAAQQ,EAAOJ,GAAOJ,OAAQW,IAAKP,KAZ9E,EAAKM,MAAQ,CACXX,MAAO,2DACPC,OAAQ,cACRW,IAAK,GALU,E,sEAkBjB,OACA,yBAAKE,GAAG,aACN,yBAAKA,GAAG,QACLC,KAAKJ,MAAMX,OAEd,yBAAKc,GAAG,UAAR,IACIC,KAAKJ,MAAMV,QAEf,yBAAKa,GAAG,WACN,uBAAGA,GAAG,cAAcE,KAAK,4BAAzB,SACA,uBAAGF,GAAG,YAAYE,KAAK,IAAIC,QAASF,KAAKX,aAAzC,mB,GA7B6Bc,IAAMC,YCQvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.2c9940b4.chunk.js","sourcesContent":["const QUOTES = [\r\n    {\r\n        quote: \"Start where you are. Use what you have. Do what you can.\",\r\n        author: \"Arthur Ashe\"\r\n    }, {\r\n        quote: \"When one door of happiness closes, another opens, but often we look so long at the closed door that we do not see the one that has been opened for us.\",\r\n        author: \"Helen Keller\"\r\n    }, {\r\n        quote: \"The person who says it cannot be done should not interrupt the person who is doing it.\",\r\n        author: \"Chinese Proverb\"\r\n    }, {\r\n        quote: \"I have been impressed with the urgency of doing. Knowing is not enough; we must apply. Being willing is not enough; we must do.\",\r\n        author: \"Leonardo da Vinci\"\r\n    }, {\r\n        quote: \"Twenty years from now you will be more disappointed by the things that you didn’t do than by the ones you did do, so throw off the bowlines, sail away from safe harbor, catch the trade winds in your sails. Explore, Dream, Discover.\",\r\n        author: \"Mark Twain\"\r\n    }, {\r\n        quote: \"Whether you think you can or you think you can’t, you’re right.\",\r\n        author: \"Henry Ford\"\r\n    }, {\r\n        quote: \"When I stand before God at the end of my life, I would hope that I would not have a single bit of talent left and could say, I used everything you gave me.\",\r\n        author: \"Erma Bombeck\"\r\n    }, {\r\n        quote: \"It’s your place in the world; it’s your life. Go on and do all you can with it, and make it the life you want to live.\",\r\n        author: \"Mae Jemison\"\r\n    }, {\r\n        quote: \"Remember that not getting what you want is sometimes a wonderful stroke of luck.\",\r\n        author: \"Dalai Lama\"\r\n    }, {\r\n        quote: \"The most common way people give up their power is by thinking they don’t have any.\",\r\n        author: \"Alice Walker\"\r\n    }, {\r\n        quote: \"I’ve missed more than 9000 shots in my career. I’ve lost almost 300 games. 26 times I’ve been trusted to take the game winning shot and missed. I’ve failed over and over and over again in my life. And that is why I succeed.\",\r\n        author: \"Michael Jordan\"\r\n    }, {\r\n        quote: \"Everything you’ve ever wanted is on the other side of fear.\",\r\n        author: \"George Addair\"\r\n    }, {\r\n        quote: \"I would rather die of passion than of boredom.\",\r\n        author: \"Vincent van Gogh\"\r\n    }, {\r\n        quote: \"You become what you believe.\",\r\n        author: \"Oprah Winfrey\"\r\n    }, {\r\n        quote: \"If you’re offered a seat on a rocket ship, don’t ask what seat! Just get on.\",\r\n        author: \"Sheryl Sandberg\"\r\n    }, {\r\n        quote: \"We become what we think about.\",\r\n        author: \"Earl Nightingale\"\r\n    }\r\n]\r\n\r\n  export default QUOTES","import React from 'react'\r\nimport Quotes from './quotes'\r\nimport './App.css'\r\n\r\nexport default class Wrapper extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      quote: 'Start where you are. Use what you have. Do what you can.',\r\n      author: 'Arthur Ashe',\r\n      num: 0\r\n    }\r\n  }\r\n\r\n  getNewQuote = () => {\r\n    let index = Math.floor(Math.random()*Quotes.length)\r\n    while (index === this.state.num) {\r\n      index = Math.floor(Math.random()*Quotes.length)\r\n    }\r\n    this.setState({quote: Quotes[index].quote, author: Quotes[index].author, num: index})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div id=\"quote-box\">\r\n      <div id=\"text\">\r\n        {this.state.quote}\r\n      </div>\r\n      <div id=\"author\">\r\n        -{this.state.author}\r\n      </div>\r\n      <div id=\"buttons\">\r\n        <a id=\"tweet-quote\" href=\"twitter.com/intent/tweet\">Tweet</a>\r\n        <a id=\"new-quote\" href=\"#\" onClick={this.getNewQuote}>New quote</a>\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}